// Code generated by mockery v1.0.0. DO NOT EDIT.

package repositories

import (

	models "github.com/auth_app/app/models"
	mock "github.com/stretchr/testify/mock"
)

// MockRepoUser is an autogenerated mock type for the RepoUser type
type MockRepoUser struct {
	mock.Mock
}

// GetUsersByFilters provides a mock function with given fields: filter
func (_m *MockRepoUser) GetUsersByFilters(filter *models.User) (*[]models.User, error) {
	ret := _m.Called(filter)

	var r0 *[]models.User
	if rf, ok := ret.Get(0).(func(*models.User) *[]models.User); ok {
		r0 = rf(filter)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*[]models.User)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*models.User) error); ok {
		r1 = rf(filter)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// InsertUser provides a mock function with given fields: data
func (_m *MockRepoUser) InsertUser(data *models.User) (*int, error) {
	ret := _m.Called(data)
	var r0 *int
	if rf, ok := ret.Get(0).(func(*models.User) *int); ok {
		r0 = rf(data)	
	} else {	
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*int)
		}
	}
	var r1 error
	if rf, ok := ret.Get(1).(func(*models.User) error); ok {
		r1 = rf(data)
	} else {
		r1 = ret.Error(1)
	}
	return r0, r1
}
